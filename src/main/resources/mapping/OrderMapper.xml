<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wpp.spike.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.wpp.spike.model.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="ordernumber" property="ordernumber" jdbcType="VARCHAR" />
    <result column="goodid" property="goodid" jdbcType="INTEGER" />
    <result column="customerid" property="customerid" jdbcType="INTEGER" />
    <result column="orderamount" property="orderamount" jdbcType="DECIMAL" />
    <result column="ordercount" property="ordercount" jdbcType="INTEGER" />
    <result column="orderstatus" property="orderstatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, ordernumber, goodid, customerid, orderamount, ordercount, orderstatus
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wpp.spike.model.Order" >
    insert into orders (id, ordernumber, goodid, 
      customerid, orderamount, ordercount, 
      orderstatus)
    values (#{id,jdbcType=INTEGER}, #{ordernumber,jdbcType=VARCHAR}, #{goodid,jdbcType=INTEGER}, 
      #{customerid,jdbcType=INTEGER}, #{orderamount,jdbcType=DECIMAL}, #{ordercount,jdbcType=INTEGER}, 
      #{orderstatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wpp.spike.model.Order" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="ordernumber != null" >
        ordernumber,
      </if>
      <if test="goodid != null" >
        goodid,
      </if>
      <if test="customerid != null" >
        customerid,
      </if>
      <if test="orderamount != null" >
        orderamount,
      </if>
      <if test="ordercount != null" >
        ordercount,
      </if>
      <if test="orderstatus != null" >
        orderstatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ordernumber != null" >
        #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="goodid != null" >
        #{goodid,jdbcType=INTEGER},
      </if>
      <if test="customerid != null" >
        #{customerid,jdbcType=INTEGER},
      </if>
      <if test="orderamount != null" >
        #{orderamount,jdbcType=DECIMAL},
      </if>
      <if test="ordercount != null" >
        #{ordercount,jdbcType=INTEGER},
      </if>
      <if test="orderstatus != null" >
        #{orderstatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wpp.spike.model.Order" >
    update orders
    <set >
      <if test="ordernumber != null" >
        ordernumber = #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="goodid != null" >
        goodid = #{goodid,jdbcType=INTEGER},
      </if>
      <if test="customerid != null" >
        customerid = #{customerid,jdbcType=INTEGER},
      </if>
      <if test="orderamount != null" >
        orderamount = #{orderamount,jdbcType=DECIMAL},
      </if>
      <if test="ordercount != null" >
        ordercount = #{ordercount,jdbcType=INTEGER},
      </if>
      <if test="orderstatus != null" >
        orderstatus = #{orderstatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wpp.spike.model.Order" >
    update orders
    set ordernumber = #{ordernumber,jdbcType=VARCHAR},
      goodid = #{goodid,jdbcType=INTEGER},
      customerid = #{customerid,jdbcType=INTEGER},
      orderamount = #{orderamount,jdbcType=DECIMAL},
      ordercount = #{ordercount,jdbcType=INTEGER},
      orderstatus = #{orderstatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>